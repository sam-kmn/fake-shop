{"ast":null,"code":"import { TimeoutError } from '../errors/TimeoutError.js'; // `Promise.race()` workaround (#91)\n\nexport const timeout = async (request, abortController, options) => new Promise((resolve, reject) => {\n  const timeoutId = setTimeout(() => {\n    if (abortController) {\n      abortController.abort();\n    }\n\n    reject(new TimeoutError(request));\n  }, options.timeout);\n  void options.fetch(request).then(resolve).catch(reject).then(() => {\n    clearTimeout(timeoutId);\n  });\n});\nexport const delay = async ms => new Promise(resolve => {\n  setTimeout(resolve, ms);\n});","map":{"version":3,"mappings":"AAAA,SAAQA,YAAR,QAA2B,2BAA3B,C,CAOA;;AACA,OAAO,MAAMC,OAAO,GAAG,OACtBC,OADsB,EAEtBC,eAFsB,EAGtBC,OAHsB,KAKtB,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAoB;AAC/B,QAAMC,SAAS,GAAGC,UAAU,CAAC,MAAK;AACjC,QAAIN,eAAJ,EAAqB;AACpBA,qBAAe,CAACO,KAAhB;AACA;;AAEDH,UAAM,CAAC,IAAIP,YAAJ,CAAiBE,OAAjB,CAAD,CAAN;AACA,GAN2B,EAMzBE,OAAO,CAACH,OANiB,CAA5B;AAQA,OAAKG,OAAO,CACVO,KADG,CACGT,OADH,EAEHU,IAFG,CAEEN,OAFF,EAGHO,KAHG,CAGGN,MAHH,EAIHK,IAJG,CAIE,MAAK;AACVE,gBAAY,CAACN,SAAD,CAAZ;AACA,GANG,CAAL;AAOA,CAhBD,CALM;AAuBP,OAAO,MAAMO,KAAK,GAAG,MAAOC,EAAP,IAAsB,IAAIX,OAAJ,CAAYC,OAAO,IAAG;AAChEG,YAAU,CAACH,OAAD,EAAUU,EAAV,CAAV;AACA,CAF0C,CAApC","names":["TimeoutError","timeout","request","abortController","options","Promise","resolve","reject","timeoutId","setTimeout","abort","fetch","then","catch","clearTimeout","delay","ms"],"sources":["/Users/sam/WebDev/React/fake-shop/node_modules/ky/source/utils/time.ts"],"sourcesContent":["import {TimeoutError} from '../errors/TimeoutError.js';\n\nexport type TimeoutOptions = {\n\ttimeout: number;\n\tfetch: typeof fetch;\n};\n\n// `Promise.race()` workaround (#91)\nexport const timeout = async (\n\trequest: Request,\n\tabortController: AbortController | undefined,\n\toptions: TimeoutOptions,\n): Promise<Response> =>\n\tnew Promise((resolve, reject) => {\n\t\tconst timeoutId = setTimeout(() => {\n\t\t\tif (abortController) {\n\t\t\t\tabortController.abort();\n\t\t\t}\n\n\t\t\treject(new TimeoutError(request));\n\t\t}, options.timeout);\n\n\t\tvoid options\n\t\t\t.fetch(request)\n\t\t\t.then(resolve)\n\t\t\t.catch(reject)\n\t\t\t.then(() => {\n\t\t\t\tclearTimeout(timeoutId);\n\t\t\t});\n\t});\n\nexport const delay = async (ms: number) => new Promise(resolve => {\n\tsetTimeout(resolve, ms);\n});\n"]},"metadata":{},"sourceType":"module"}