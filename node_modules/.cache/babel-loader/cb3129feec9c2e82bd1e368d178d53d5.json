{"ast":null,"code":"export const supportsAbortController = typeof globalThis.AbortController === 'function';\nexport const supportsStreams = typeof globalThis.ReadableStream === 'function';\nexport const supportsFormData = typeof globalThis.FormData === 'function';\nexport const requestMethods = ['get', 'post', 'put', 'patch', 'head', 'delete'];\n\nconst validate = () => undefined;\n\nvalidate();\nexport const responseTypes = {\n  json: 'application/json',\n  text: 'text/*',\n  formData: 'multipart/form-data',\n  arrayBuffer: '*/*',\n  blob: '*/*'\n}; // The maximum value of a 32bit int (see issue #117)\n\nexport const maxSafeTimeout = 2147483647;\nexport const stop = Symbol('stop');","map":{"version":3,"mappings":"AAGA,OAAO,MAAMA,uBAAuB,GAAG,OAAOC,UAAU,CAACC,eAAlB,KAAsC,UAAtE;AACP,OAAO,MAAMC,eAAe,GAAG,OAAOF,UAAU,CAACG,cAAlB,KAAqC,UAA7D;AACP,OAAO,MAAMC,gBAAgB,GAAG,OAAOJ,UAAU,CAACK,QAAlB,KAA+B,UAAxD;AAEP,OAAO,MAAMC,cAAc,GAAG,CAAC,KAAD,EAAQ,MAAR,EAAgB,KAAhB,EAAuB,OAAvB,EAAgC,MAAhC,EAAwC,QAAxC,CAAvB;;AAEP,MAAMC,QAAQ,GAAG,MAA6BC,SAA9C;;AACAD,QAAQ;AAIR,OAAO,MAAME,aAAa,GAAG;AAC5BC,MAAI,EAAE,kBADsB;AAE5BC,MAAI,EAAE,QAFsB;AAG5BC,UAAQ,EAAE,qBAHkB;AAI5BC,aAAW,EAAE,KAJe;AAK5BC,MAAI,EAAE;AALsB,CAAtB,C,CAQP;;AACA,OAAO,MAAMC,cAAc,GAAG,UAAvB;AAEP,OAAO,MAAMC,IAAI,GAAGC,MAAM,CAAC,MAAD,CAAnB","names":["supportsAbortController","globalThis","AbortController","supportsStreams","ReadableStream","supportsFormData","FormData","requestMethods","validate","undefined","responseTypes","json","text","formData","arrayBuffer","blob","maxSafeTimeout","stop","Symbol"],"sources":["/Users/sam/WebDev/React/fake-shop/node_modules/ky/source/core/constants.ts"],"sourcesContent":["import type {Expect, Equal} from '@type-challenges/utils';\nimport {HttpMethod} from '../types/options.js';\n\nexport const supportsAbortController = typeof globalThis.AbortController === 'function';\nexport const supportsStreams = typeof globalThis.ReadableStream === 'function';\nexport const supportsFormData = typeof globalThis.FormData === 'function';\n\nexport const requestMethods = ['get', 'post', 'put', 'patch', 'head', 'delete'] as const;\n\nconst validate = <T extends Array<true>>() => undefined as unknown as T;\nvalidate<[\n\tExpect<Equal<typeof requestMethods[number], HttpMethod>>,\n]>();\n\nexport const responseTypes = {\n\tjson: 'application/json',\n\ttext: 'text/*',\n\tformData: 'multipart/form-data',\n\tarrayBuffer: '*/*',\n\tblob: '*/*',\n} as const;\n\n// The maximum value of a 32bit int (see issue #117)\nexport const maxSafeTimeout = 2_147_483_647;\n\nexport const stop = Symbol('stop');\n"]},"metadata":{},"sourceType":"module"}