{"ast":null,"code":"/*! MIT License © Sindre Sorhus */\nimport { Ky } from './core/Ky.js';\nimport { requestMethods, stop } from './core/constants.js';\nimport { validateAndMerge } from './utils/merge.js';\n\nconst createInstance = defaults => {\n  // eslint-disable-next-line @typescript-eslint/promise-function-async\n  const ky = (input, options) => Ky.create(input, validateAndMerge(defaults, options));\n\n  for (const method of requestMethods) {\n    // eslint-disable-next-line @typescript-eslint/promise-function-async\n    ky[method] = (input, options) => Ky.create(input, validateAndMerge(defaults, options, {\n      method\n    }));\n  }\n\n  ky.create = newDefaults => createInstance(validateAndMerge(newDefaults));\n\n  ky.extend = newDefaults => createInstance(validateAndMerge(defaults, newDefaults));\n\n  ky.stop = stop;\n  return ky;\n};\n\nconst ky = createInstance();\nexport default ky;\nexport { HTTPError } from './errors/HTTPError.js';\nexport { TimeoutError } from './errors/TimeoutError.js';","map":{"version":3,"mappings":"AAAA;AAEA,SAAQA,EAAR,QAAiB,cAAjB;AACA,SAAQC,cAAR,EAAwBC,IAAxB,QAAmC,qBAAnC;AAGA,SAAQC,gBAAR,QAA+B,kBAA/B;;AAGA,MAAMC,cAAc,GAAIC,QAAD,IAA4C;AAClE;AACA,QAAMC,EAAE,GAAiC,CAACC,KAAD,EAAeC,OAAf,KAAqCR,EAAE,CAACS,MAAH,CAAUF,KAAV,EAAiBJ,gBAAgB,CAACE,QAAD,EAAWG,OAAX,CAAjC,CAA9E;;AAEA,OAAK,MAAME,MAAX,IAAqBT,cAArB,EAAqC;AACpC;AACAK,MAAE,CAACI,MAAD,CAAF,GAAa,CAACH,KAAD,EAAeC,OAAf,KAAqCR,EAAE,CAACS,MAAH,CAAUF,KAAV,EAAiBJ,gBAAgB,CAACE,QAAD,EAAWG,OAAX,EAAoB;AAACE;AAAD,KAApB,CAAjC,CAAlD;AACA;;AAEDJ,IAAE,CAACG,MAAH,GAAaE,WAAD,IAAoCP,cAAc,CAACD,gBAAgB,CAACQ,WAAD,CAAjB,CAA9D;;AACAL,IAAE,CAACM,MAAH,GAAaD,WAAD,IAAoCP,cAAc,CAACD,gBAAgB,CAACE,QAAD,EAAWM,WAAX,CAAjB,CAA9D;;AACAL,IAAE,CAACJ,IAAH,GAAUA,IAAV;AAEA,SAAOI,EAAP;AACA,CAdD;;AAgBA,MAAMA,EAAE,GAAGF,cAAc,EAAzB;AAEA,eAAeE,EAAf;AAmBA,SAAQO,SAAR,QAAwB,uBAAxB;AACA,SAAQC,YAAR,QAA2B,0BAA3B","names":["Ky","requestMethods","stop","validateAndMerge","createInstance","defaults","ky","input","options","create","method","newDefaults","extend","HTTPError","TimeoutError"],"sources":["/Users/sam/WebDev/React/fake-shop/node_modules/ky/source/index.ts"],"sourcesContent":["/*! MIT License © Sindre Sorhus */\n\nimport {Ky} from './core/Ky.js';\nimport {requestMethods, stop} from './core/constants.js';\nimport type {KyInstance} from './types/ky.js';\nimport type {Input, Options} from './types/options.js';\nimport {validateAndMerge} from './utils/merge.js';\nimport {Mutable} from './utils/types.js';\n\nconst createInstance = (defaults?: Partial<Options>): KyInstance => {\n\t// eslint-disable-next-line @typescript-eslint/promise-function-async\n\tconst ky: Partial<Mutable<KyInstance>> = (input: Input, options?: Options) => Ky.create(input, validateAndMerge(defaults, options));\n\n\tfor (const method of requestMethods) {\n\t\t// eslint-disable-next-line @typescript-eslint/promise-function-async\n\t\tky[method] = (input: Input, options?: Options) => Ky.create(input, validateAndMerge(defaults, options, {method}));\n\t}\n\n\tky.create = (newDefaults?: Partial<Options>) => createInstance(validateAndMerge(newDefaults));\n\tky.extend = (newDefaults?: Partial<Options>) => createInstance(validateAndMerge(defaults, newDefaults));\n\tky.stop = stop;\n\n\treturn ky as KyInstance;\n};\n\nconst ky = createInstance();\n\nexport default ky;\n\nexport {\n\tOptions,\n\tNormalizedOptions,\n\tRetryOptions,\n\tSearchParamsOption,\n\tDownloadProgress,\n} from './types/options.js';\n\nexport {\n\tHooks,\n\tBeforeRequestHook,\n\tBeforeRetryHook,\n\tBeforeErrorHook,\n\tAfterResponseHook,\n} from './types/hooks.js';\n\nexport {ResponsePromise} from './types/response.js';\nexport {HTTPError} from './errors/HTTPError.js';\nexport {TimeoutError} from './errors/TimeoutError.js';\n"]},"metadata":{},"sourceType":"module"}